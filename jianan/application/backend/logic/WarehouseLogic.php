<?phpnamespace app\backend\logic;use think\Db;use think\Request;class WarehouseLogic{       /**     * 客户查询的逻辑     * @access public      * @param array   $param 条件数据     * @param array   $ausess 账号的session信息     * @since dxf      * @return [array]     */	static public  function selectParam($param,$ausess){        $where=[];        //客户名称        if(isset($param['name']) && !empty($param['name'])){            $where['name']=array('like',"%$param[name]%");        }        //手机号        if(isset($param['mobile']) && !empty($param['mobile'])){            $where['mobile']=array('like',"%$param[mobile]%");        }        //类别id        if(isset($param['cate_id']) && !empty($param['cate_id'])){            $where['cate_id']=$param['cate_id'];        }        //来源        if(isset($param['from']) && !empty($param['from'])){            $where['from']=$param['from'];        }        //添加人        if(isset($param['auid']) && !empty($param['auid'])){            $where['auid']=$param['auid'];        }        //跟进状态        if(isset($param['follow_status']) && !empty($param['follow_status'])){            $where['follow_status']=$param['follow_status'];        }        // 下次跟进开始时间        if(isset($param['action_time']) && !empty($param['action_time'])){            $where['next_contact_time'] = ['>=' , strtotime($param['action_time'])];        }        // 下次跟进结束时间        if(isset($param['end_time']) && !empty($param['end_time'])){            if (!empty($where['next_contact_time'])){                $where['next_contact_time'] = ['between' , [strtotime($param['action_time']),strtotime($param['end_time'])]];            }else{                $where['next_contact_time'] = ['between' , [1,strtotime($param['end_time'])]];            }        }        return $where;    }    /**     * 客户数据下载的逻辑     * @access public     * @param array $data 要下载的数据     * @param array $name excel表名称     * @return [file]     * @since dxf     */    static public function cus_down($data, $name,$type = 1,$title = "")    {        vendor('PHPExcel.PHPExcel');        $objPHPExcel = new \PHPExcel();        $objPHPExcel->getActiveSheet()->getStyle('A:N')->getAlignment()->setHorizontal(\PHPExcel_Style_Alignment::HORIZONTAL_CENTER);        //遍历数组，注意数组对应的下标        if ($type == 2) {            foreach ($data as $k => $v) {                //合并单元格                $objPHPExcel->setActiveSheetIndex(0)->mergeCells('A1:F2');                $objPHPExcel->setActiveSheetIndex(0)->setCellValue('A1', $title);                //设置单元格里面的值对齐                $objPHPExcel->getActiveSheet()->getStyle('A1')->getAlignment()->setWrapText(true);                $objPHPExcel->setActiveSheetIndex(0)                    ->setCellValue('A'. $k, $v['name'])                    ->setCellValue('B'. $k, $v['num'])                    ->setCellValue('C'. $k, $v['type'])                    ->setCellValue('D'. $k, $v['unit'])                    ->setCellValue('E'. $k, $v['price'])                    ->setCellValue('F'. $k, $v['mark']);            }        } else {            foreach($data as $k => $v){                $k++;                $objPHPExcel->setActiveSheetIndex(0)                    ->setCellValue('A'.$k, $v['name'])                    ->setCellValue('B'.$k, $v['num'])                    ->setCellValue('C'.$k, $v['type'])                    ->setCellValue('D'.$k, $v['unit'])                    ->setCellValue('E'.$k, $v['price'])                    ->setCellValue('F'.$k, $v['mark']);            }        }        ob_end_clean();        header('Content-Type: application/vnd.ms-excel');        header('Content-Disposition: attachment;filename="' . $name . '.xls"');        header('Cache-Control: max-age=0');        $objWriter = \PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');        $objWriter->save('php://output');        exit;    }    /**     * 模板下载的表头     * @return array     */    static public function cus_muban()    {        $rs[3]['name'] = '名称';$rs[3]['num'] = '数量';$rs[3]['type'] = '类型'; $rs[3]['unit'] = '单位';$rs[3]['price'] = '单价';$rs[3]['mark'] = '说明';        $rs[4]['name'] = '电脑';$rs[4]['num'] = '12';$rs[4]['type'] = 'A类'; $rs[4]['unit'] = '个';$rs[4]['price'] = '6000';$rs[4]['mark'] = '公司电脑';        $rs[5]['name'] = '叉车';$rs[5]['num'] = '16';$rs[5]['type'] = 'B类'; $rs[5]['unit'] = '辆';$rs[5]['price'] = '652100';$rs[5]['mark'] = '外租叉车';        $rs[6]['name'] = '笔记本';$rs[6]['num'] = '25';$rs[6]['type'] = 'C类'; $rs[6]['unit'] = '本';$rs[6]['price'] = '10';$rs[6]['mark'] = '申请登记';        return $rs;    }    /**     * 文件上传的字段逻辑     * @param $uploadfile     * @param $ausess     * @return array     * @throws \Exception     */    static public function uploadFile($uploadfile,$ausess)    {        vendor('PHPExcel.PHPExcel');        vendor('PHPExcel.PHPExcel.IOFactory');        vendor('PHPExcel.PHPExcel.Reader.Excel2007.php');        vendor('PHPExcel.PHPExcel.Reader.Excel5.php');        vendor('PHPExcel.PHPExcel.Reader.CSV.php');        $extension = strtolower(pathinfo($uploadfile, PATHINFO_EXTENSION) );        if ($extension =='xlsx') {            $objReader = new \PHPExcel_Reader_Excel2007();            $objPHPExcel = $objReader ->load($uploadfile);        } else if ($extension =='xls') {            $objReader = new \PHPExcel_Reader_Excel5();            $objPHPExcel = $objReader ->load($uploadfile);        } else if ($extension=='csv') {            $PHPReader = new \PHPExcel_Reader_CSV();            //默认输入字符集            $PHPReader->setInputEncoding('UTF-8');            //默认的分隔符            $PHPReader->setDelimiter(',');            //载入文件            $objPHPExcel = $PHPReader->load($uploadfile);        }        $sheet = $objPHPExcel->getSheet(0);        $highestRow = $sheet->getHighestRow();           //取得总行数        $highestColumn = $sheet->getHighestColumn();    //取得总列数        $objWorksheet = $objPHPExcel->getActiveSheet();        $highestRow = $objWorksheet->getHighestRow();        //echo '总行数='.$highestRow;        $highestColumn = $objWorksheet->getHighestColumn();        $highestColumnIndex = \PHPExcel_Cell::columnIndexFromString($highestColumn);        $headtitle=array();        $msg=array();        $status=1;        $data = [];        for ($row = 3;$row <= $highestRow;$row++)        {            $strs=array();            //注意highestColumnIndex的列数索引从0开始            for ($col = 0;$col < $highestColumnIndex;$col++)            {                $strs[$col] =$objWorksheet->getCellByColumnAndRow($col, $row)->getValue();            }            //检查表头            if($row==3){                if(trim($strs['0'])!='名称'){                    $msg="表头:".$strs['0']."，与要求表头不匹配";                    $status=-1;                    break;                }                if(trim($strs['1'])!='数量'){                    $msg="表头:".$strs['1']."，与要求表头不匹配";                    $status=-1;                    break;                }                if(trim($strs['2'])!='类型'){                    $msg="表头:".$strs['2']."，与要求表头不匹配";                    $status=-1;                    break;                }                if(trim($strs['3'])!='单位'){                    $msg="表头:".$strs['3']."，与要求表头不匹配";                    $status=-1;                    break;                }                if(trim($strs['4'])!='单价'){                    $msg="表头:".$strs['4']."，与要求表头不匹配";                    $status=-1;                    break;                }                if(trim($strs['5'])!='说明'){                    $msg="表头:".$strs['5']."，与要求表头不匹配";                    $status=-1;                    break;                }            }elseif($row>1001){                $msg='导入失败！单次最大导入量1000条';                $status=-1;                break;            }else{                $data[$row]['name']=trim($strs['0']);                $data[$row]['num']=trim($strs['1']);                $data[$row]['type'] = trim($strs['2']) == "固定资产" ? 1 : 2;                $data[$row]['unit'] = trim($strs['3']);                $data[$row]['price']=trim($strs['4']);                $data[$row]['mark']=trim($strs['5']);                $data[$row]['create_time']=time();                $data[$row]['admin_id'] = $ausess['auid'];            }        }        if($status==1){            return ['status'=>1,'msg'=>'数据检查成功','data'=>$data];        }else{            return ['status'=>-1,'msg'=>$msg];        }    }   } 