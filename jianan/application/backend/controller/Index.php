<?phpnamespace app\backend\controller;use app\backend\model\AuthGroup;use app\backend\model\Customer as C;use app\backend\model\CustomerCate;use app\backend\model\CustomerRecord;use app\backend\model\ProfessionCate;use app\backend\model\Read;use app\common\model\Notice as N;use think\Controller;use think\exception\DbException;use think\Session;use think\Request;use app\backend\model\AdminUser;use app\backend\model\Customer;class Index extends Common{       /**      * 系统的首页     * @access public      * @since dxf      * @return [type] 页面      */     public function index()    {	        $request = Request::instance();        $url=$request->pathinfo();        if($url!="backend/index/index"){            echo '<script>location.href="http://'.$_SERVER['HTTP_HOST'].'/backend/index/index";</script>';            die;        }    	        $ausess=$this->ausess();        $this->assign('config',tpCache());    	$this->assign('navlist',$ausess['navlist']);    	$this->assign('group',$ausess['group_name']);        return $this->fetch();    }    /**      * 系统的首页     * @access public      * @since dxf      * @return [type] 页面      */     public function home()    {        return $this->fetch();    }    /**     * 客户详情     * @access public     * @return mixed [type] 页面     * @throws DbException     */    public function detail(){        $param=input('param.');        if(isset($param['id']) && !empty($param['id'])){            $ress= C::get($param['id']);            if (!empty($ress['profession_id'])){                $ress['profession_info'] = \app\backend\model\Profession::get($ress['profession_id']);                $ress['profession_top_info'] = \app\backend\model\Profession::get($ress['profession_info']['pid']);                $ress['profession_cate_info'] = ProfessionCate::get($ress['profession_info']['cate_id']);            }            $catelist=CustomerCate::getAll(['status'=>1]);            $record= CustomerRecord::getAll(['customer_id'=>$param['id']]);        }else{            $this->error('页面出错了！');        }        $data=['record'=>$record,'ress'=>$ress,'param'=>$param,'catelist'=>$catelist];        $this->assign('data',$data);        return  $this->fetch();    }    /**      * 修改个人信息     * @access public      * @since dxf      * @return [type] 页面      */     public function auinfo(){        $ausess=$this->ausess();        $auress=AdminUser::get($ausess['auid']);        if(var_export(Request::instance()->isAjax(), true)==='true'){            $staff=new AdminUser;            $data=$this->dataAction();            //验证手机号            if(!empty($data['mobile'])){               if(!mobileValidate($data['mobile'])){                    ajaxReturn($this->errCode('validError'), '手机号码格式不正确');               }            }            if(!empty($data['email'])){               if(!emailValidate($data['email'])){                    ajaxReturn($this->errCode('validError'), '邮箱格式不正确');               }            }            $ress=$staff->save($data,['id'=>$ausess['auid']]);            if($ress){                ajaxReturn($this->errCode('OK'), '信息修改成功');            }else{                ajaxReturn($this->errCode('SQLError'), $ress->getError());            }        }        $this->assign('data',$auress);        $this->assign('group',$auress->hasGroupone);        return  $this->fetch();    }    /**      * 修改密码     * @access public      * @since dxf      * @return [type] 页面      */     public function editpwd(){        if(var_export(Request::instance()->isAjax(), true)==='true'){            $au=new AdminUser;            $ress=$au->pwdaction($this->dataAction(),$this->ausess());            return $ress;        }        return  $this->fetch('index/edit_pwd');    }    public function notice(){        return $this->fetch();    }    /**     * 代办事件     * @return \think\response\View     * @throws DbException     */    public function notices()    {        $notice = new Read();        $where = [];$type = [];        if ($this->ausess()['group_id'] != 1){            $access = AuthGroup::where('id',$this->ausess()['group_id'])->value('rules');            $access = explode(',',$access);            //退费审核            $type = [];            if(in_array(218,$access) || in_array(170,$access)){                //$where1 = ['type'=>9];                array_push($type,9);            }            //发票审核            if(in_array(194,$access) || in_array(216,$access)){                //$where2 = ['type'=>10];                array_push($type,10);            }            //领证审核            if(in_array(217,$access) || in_array(77,$access)){                //$where3 = ['type'=>11];                array_push($type,11);            }            //财务审核            if(in_array(189,$access) || in_array(49,$access)){                //$where4 = ['type'=>8];                array_push($type,8);            }            //资料审核            if(in_array(186,$access) || in_array(46,$access)){                //$where5['type'] = ['in',[6,7]];                $type = array_merge($type,[6,7]);            }            //职业技能提升            if(in_array(215,$access)){                //$where6['type'] = ['in',[12,13]];                $type = array_merge($type,[12,13]);            }            //业务员的查看权限            $where['user_id'] = $this->ausess()['auid'];        }        $res = $notice            ->where($where)            ->whereOr('type','in',$type)            ->paginate(15);        $list=$res->toArray()['data'];        return view('',[            'data' => $list,            'page' => $res->render()        ]);    }    /**     * 读取     */    public function read()    {        $id = input('id');        Read::where('id',$id)->update(['status'=>1]);        $this->success('成功');    }}