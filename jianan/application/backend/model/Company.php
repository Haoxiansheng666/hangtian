<?phpnamespace app\backend\model;class Company extends BaseModel{    protected $autoWriteTimestamp = 'create_time';    protected $createTime = 'create_time';    protected $updateTime = false;    protected $append = [        'create_time_text'    ];    public function getCreateTimeTextAttr($value,$data){        return !empty($data['create_time']) ? date('Y-m-d H:i:s',$data['create_time']) : '';    }    /**     * @param $param     * @param array $where     * @return array     * @throws \think\exception\DbException     */    public function get_join_list($param,$where=[]){        $type = 0;        if(isset($param['type']) && !empty($param['type'])){            $type = $param['type'];        }        $res =  $this->alias('c')->join('pay_student p','c.id = p.company_id')            ->where($where)            ->field('c.*')            ->group('company_id')            ->order('c.id DESC')            ->paginate($param['limit'])            ->each(function ($val){                $val['total_price'] = $total_price = PayStudent::where('company_id',$val['id'])->sum('total_price');                $pay = collection(PayLog::where('company_id',$val['id'])->where('status',1)->group('batch_number')->select())->toArray();                $pay_price = array_column($pay,'pay_price');                $val['pay_price'] = $pay_price = array_sum($pay_price);                $val['price'] = $pay_price - $total_price;                return $val;            });        return [            'count' => $res->total(),            'list' => $res->items(),            'last_page' => $res->lastPage()        ];    }    /**     * @param $param     * @param array $where     * @return array     * @throws \think\exception\DbException     */    public function getjoinlist($param,$where=[]){        $res =  $this            ->where($where)            ->order('id DESC')            ->paginate($param['limit']);        return [            'count' => $res->total(),            'list' => $res->items(),            'last_page' => $res->lastPage()        ];    }} 